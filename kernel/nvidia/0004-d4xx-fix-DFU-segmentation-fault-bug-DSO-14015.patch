From 024cc75accbd28cde3e81b3a7be869e32cc1133e Mon Sep 17 00:00:00 2001
From: Emil Jahshan <emil.jahshan@intel.com>
Date: Mon, 10 May 2021 15:40:34 +0300
Subject: [PATCH 04/11] d4xx: fix DFU segmentation fault, bug DSO-14015

Signed-off-by: Emil Jahshan <emil.jahshan@intel.com>
---
 drivers/media/i2c/d4xx.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/media/i2c/d4xx.c b/drivers/media/i2c/d4xx.c
index 6912c7c8b..a3cb1d0ff 100644
--- a/drivers/media/i2c/d4xx.c
+++ b/drivers/media/i2c/d4xx.c
@@ -2708,7 +2708,7 @@ static int ds5_dfu_detach(struct ds5 *state)
 };
 
 /* When a process reads from our device, this gets called. */
-static ssize_t device_read(struct file *flip, char *buffer, size_t len, loff_t *offset)
+static ssize_t device_read(struct file *flip, char __user *buffer, size_t len, loff_t *offset)
 {
 	struct ds5 *state = flip->private_data;
 	u16 fw_ver;
@@ -2733,7 +2733,7 @@ e_dfu_read_failed:
 	return ret;
 };
 
-static ssize_t device_write(struct file *flip, const char *buffer, size_t len, loff_t *offset)
+static ssize_t device_write(struct file *flip, const char __user *buffer, size_t len, loff_t *offset)
 {
 	struct ds5 *state = flip->private_data;
 	int ret = 0;
@@ -2768,7 +2768,7 @@ static ssize_t device_write(struct file *flip, const char *buffer, size_t len, l
 				ret = -EFAULT;
 				goto dfu_write_error;
 			}
-			ret = ds5_raw_write(state, 0x4a00, buffer, DFU_BLOCK_SIZE);
+			ret = ds5_raw_write(state, 0x4a00, state->dfu_dev.dfu_msg, DFU_BLOCK_SIZE);
 			if (ret < 0)
 				goto dfu_write_error;
 			ret = ds5_dfu_wait_for_get_dfu_status (state, dfuDNLOAD_IDLE);
@@ -2781,7 +2781,7 @@ static ssize_t device_write(struct file *flip, const char *buffer, size_t len, l
 				goto dfu_write_error;
 		}
 		if (dfu_part_blocks) {
-			ret = ds5_raw_write(state, 0x4a00, buffer, dfu_part_blocks);
+			ret = ds5_raw_write(state, 0x4a00, state->dfu_dev.dfu_msg, dfu_part_blocks);
 			if (!ret) {
 				ret = ds5_dfu_wait_for_get_dfu_status (state, dfuDNLOAD_IDLE);
 			}
-- 
2.17.1

