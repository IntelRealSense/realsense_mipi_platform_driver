From dd6a28a4ab01bbadade88d73efe123df9e266567 Mon Sep 17 00:00:00 2001
From: Emil Jahshan <emil.jahshan@intel.com>
Date: Sun, 26 Sep 2021 15:42:29 +0300
Subject: [PATCH] Align I2C read values to 8-bit

by nael
 - The old, 16-bit aligned configuration, prevented driver to read buffers with odd size.

Signed-off-by: Emil Jahshan <emil.jahshan@intel.com>
---
 drivers/media/i2c/d4xx.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/drivers/media/i2c/d4xx.c b/drivers/media/i2c/d4xx.c
index 29d930648..090cebbd9 100644
--- a/drivers/media/i2c/d4xx.c
+++ b/drivers/media/i2c/d4xx.c
@@ -363,7 +363,13 @@ struct ds5_counters {
 
 static int ds5_write(struct ds5 *state, u16 reg, u16 val)
 {
-	int ret = regmap_write(state->regmap, reg, val);
+	int ret;
+	u8 value[2];
+
+	value[1] = val >> 8;
+	value[0] = val & 0x00FF;
+
+	ret = regmap_raw_write(state->regmap, reg, value, sizeof(value));
 	if (ret < 0)
 		dev_err(&state->client->dev, "%s(): i2c write failed %d, 0x%04x = 0x%x\n",
 			__func__, ret, reg, val);
@@ -2718,7 +2724,7 @@ static void ds5_mux_remove(struct ds5 *state)
 
 static const struct regmap_config ds5_regmap_config = {
 	.reg_bits = 16,
-	.val_bits = 16,
+	.val_bits = 8,
 	.reg_format_endian = REGMAP_ENDIAN_NATIVE,
 	.val_format_endian = REGMAP_ENDIAN_NATIVE,
 };
@@ -3223,4 +3229,4 @@ module_i2c_driver(ds5_i2c_driver);
 MODULE_DESCRIPTION("Intel D4XX camera driver");
 MODULE_AUTHOR("Guennadi Liakhovetski (guennadi.liakhovetski@intel.com)");
 MODULE_LICENSE("GPL v2");
-MODULE_VERSION("0.16.1.0");
+MODULE_VERSION("1.0.0.1");
-- 
2.17.1

