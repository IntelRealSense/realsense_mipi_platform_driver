From 99a80b25dade76e139bf079f8aac260e979fa75c Mon Sep 17 00:00:00 2001
From: Dmitry Perchanov <dmitry.perchanov@intel.com>
Date: Mon, 27 Jun 2022 15:30:04 +0300
Subject: [PATCH] vi5 channel timeout control to change default - changed
 default from 2500 to 500 - added TEGRA_CAMERA_CID_CAPTURE_TIMEOUT_MS v4l2
 control

Signed-off-by: Dmitry Perchanov <dmitry.perchanov@intel.com>
---
 .../media/platform/tegra/camera/vi/vi5_fops.c | 26 ++++++++++++++++---
 include/media/tegra-v4l2-camera.h             |  1 +
 2 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/drivers/media/platform/tegra/camera/vi/vi5_fops.c b/drivers/media/platform/tegra/camera/vi/vi5_fops.c
index 9d043a9..12f6800 100644
--- a/drivers/media/platform/tegra/camera/vi/vi5_fops.c
+++ b/drivers/media/platform/tegra/camera/vi/vi5_fops.c
@@ -33,7 +33,7 @@
 #define PG_BITRATE		32
 #define SLVSEC_STREAM_MAIN	0U
 
-#define CAPTURE_TIMEOUT_MS	2500
+#define CAPTURE_TIMEOUT_MS	500
 #define CAPTURE_CORRECTABLE_ERRORS	\
 	(CAPTURE_STATUS_SUCCESS \
 	| CAPTURE_STATUS_CSIMUX_FRAME \
@@ -119,6 +119,10 @@ static int tegra_vi5_g_volatile_ctrl(struct v4l2_ctrl *ctrl)
 		memcpy(ctrl->p_new.p, blob, sizeof(struct sensor_blob));
 		break;
 	}
+	case TEGRA_CAMERA_CID_CAPTURE_TIMEOUT_MS: {
+		memcpy(ctrl->p_new.p, &chan->timeout, sizeof(chan->timeout));
+		break;
+	}
 	default:
 		pr_err("%s: unknown ctrl id.\n", __func__);
 		return -EINVAL;
@@ -137,6 +141,10 @@ static int tegra_vi5_s_ctrl(struct v4l2_ctrl *ctrl)
 	case TEGRA_CAMERA_CID_WRITE_ISPFORMAT:
 		chan->write_ispformat = ctrl->val;
 		break;
+	case TEGRA_CAMERA_CID_CAPTURE_TIMEOUT_MS: {
+		chan->timeout = ctrl->val;
+		break;
+	}
 	default:
 		dev_err(&chan->video->dev, "%s:Not valid ctrl\n", __func__);
 		return -EINVAL;
@@ -203,6 +211,16 @@ static const struct v4l2_ctrl_config vi5_custom_ctrls[] = {
 		.step = 1,
 		.dims = { SENSOR_CTRL_BLOB_SIZE },
 	},
+	{
+		.ops = &vi5_ctrl_ops,
+		.id = TEGRA_CAMERA_CID_CAPTURE_TIMEOUT_MS,
+		.name = "Capture Timeout",
+		.type = V4L2_CTRL_TYPE_INTEGER,
+		.def = CAPTURE_TIMEOUT_MS,
+		.min = 1,
+		.max = CAPTURE_TIMEOUT_MS * 2,
+		.step = 1,
+	},
 };
 
 static int vi5_add_ctrls(struct tegra_channel *chan)
@@ -220,7 +238,7 @@ static int vi5_add_ctrls(struct tegra_channel *chan)
 			return chan->ctrl_handler.error;
 		}
 	}
-
+	chan->timeout = CAPTURE_TIMEOUT_MS;
 	return 0;
 }
 
@@ -438,12 +456,12 @@ static void vi5_capture_dequeue(struct tegra_channel *chan,
 			goto rel_buf;
 
 		/* Dequeue a frame and check its capture status */
-		err = vi_capture_status(chan->tegra_vi_channel[vi_port], CAPTURE_TIMEOUT_MS);
+		err = vi_capture_status(chan->tegra_vi_channel[vi_port], chan->timeout);
 		if (err) {
 			if (err == -ETIMEDOUT) {
 				dev_err(vi->dev,
 					"uncorr_err: request timed out after %d ms\n",
-					CAPTURE_TIMEOUT_MS);
+					(int)chan->timeout);
 			} else {
 				dev_err(vi->dev, "uncorr_err: request err %d\n", err);
 			}
diff --git a/include/media/tegra-v4l2-camera.h b/include/media/tegra-v4l2-camera.h
index 619218d..3ed4d44 100644
--- a/include/media/tegra-v4l2-camera.h
+++ b/include/media/tegra-v4l2-camera.h
@@ -42,6 +42,7 @@
 #define TEGRA_CAMERA_CID_SENSOR_CONFIG		(TEGRA_CAMERA_CID_BASE+50)
 #define TEGRA_CAMERA_CID_SENSOR_MODE_BLOB	(TEGRA_CAMERA_CID_BASE+51)
 #define TEGRA_CAMERA_CID_SENSOR_CONTROL_BLOB	(TEGRA_CAMERA_CID_BASE+52)
+#define TEGRA_CAMERA_CID_CAPTURE_TIMEOUT_MS	(TEGRA_CAMERA_CID_BASE+53)
 
 #define TEGRA_CAMERA_CID_VI_BYPASS_MODE		(TEGRA_CAMERA_CID_BASE+100)
 #define TEGRA_CAMERA_CID_OVERRIDE_ENABLE	(TEGRA_CAMERA_CID_BASE+101)
-- 
2.17.1

