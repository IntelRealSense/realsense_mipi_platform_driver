From cad11d53af5ba2e279e8fe56bf98d82da99b68b0 Mon Sep 17 00:00:00 2001
From: Emil Jahshan <emil.jahshan@intel.com>
Date: Sun, 17 Oct 2021 14:15:00 +0300
Subject: [PATCH] max depth exposure

 - exposure for depth changed from 166ms to 200ms

Signed-off-by: Emil Jahshan <emil.jahshan@intel.com>
---
 drivers/media/i2c/d4xx.c | 37 ++++++++++++++++++++++---------------
 1 file changed, 22 insertions(+), 15 deletions(-)

diff --git a/drivers/media/i2c/d4xx.c b/drivers/media/i2c/d4xx.c
index 84a6ea446..fbff81cbc 100644
--- a/drivers/media/i2c/d4xx.c
+++ b/drivers/media/i2c/d4xx.c
@@ -72,6 +72,10 @@
 
 #define MIPI_LANE_RATE	1000
 
+#define MAX_DEPTH_EXP	200
+#define MAX_RGB_EXP		1000
+#define MIN_EXP			1
+
 /* Currently both depth and IR use VC 0 */
 #define DS5_DEPTH_VCHAN_N		0
 #define DS5_MOTION_T_VCHAN_N		0
@@ -1115,37 +1119,35 @@ static int ds5_hw_set_auto_exposure(struct ds5 *state, u32 val)
 	return ret;
 }
 
-/* Manual exposure in us between 1 and 166ms */
+/* Manual exposure in us between 1 and 200ms */
 static int ds5_hw_set_exposure(struct ds5 *state, u32 val)
 {
 	int ret;
 	u16 value;
 
 	if (!state->is_rgb) {
-		if (val < 10)
-			val = 1000;
-		else if (val > 1660)
-			val = 166000;
+		if (val < MIN_EXP * 10)
+			val = MIN_EXP * 1000;
+		else if (val > MAX_DEPTH_EXP * 10)
+			val = MAX_DEPTH_EXP * 1000;
 		else
 			val *= 100;
 	} else {
-		if (val < 1)
-			val = 1;
-		else if (val > 10000)
-			val = 10000;
+		if (val < MIN_EXP)
+			val = MIN_EXP;
+		else if (val > MAX_RGB_EXP * 10)
+			val = MAX_RGB_EXP * 10;
 	}
 
 	if (state->is_rgb) {
-		//if (state->rgb.sensor.streaming)
-			ret = ds5_write(state, DS5_RGB_CONTROL_BASE | DS5_MANUAL_EXPOSURE_MSB, val >> 16);
+		ret = ds5_write(state, DS5_RGB_CONTROL_BASE | DS5_MANUAL_EXPOSURE_MSB, val >> 16);
 	}
 	else
 		ret = ds5_write(state, DS5_DEPTH_CONTROL_BASE | DS5_MANUAL_EXPOSURE_MSB, val >> 16);
 
 	if (!ret) {
 		if (state->is_rgb) {
-			//if (state->rgb.sensor.streaming)
-				ret = ds5_write(state, DS5_RGB_CONTROL_BASE | DS5_MANUAL_EXPOSURE_LSB, val & 0xffff);
+			ret = ds5_write(state, DS5_RGB_CONTROL_BASE | DS5_MANUAL_EXPOSURE_LSB, val & 0xffff);
 		}
 		else
 			ret = ds5_write(state, DS5_DEPTH_CONTROL_BASE | DS5_MANUAL_EXPOSURE_LSB, val & 0xffff);
@@ -1870,8 +1872,13 @@ static int ds5_ctrl_init(struct ds5 *state)
 	//           it will be a bit faster that way
 
 	/* Exposure time: x 100 us. */
-	ctrls->exposure = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_EXPOSURE_ABSOLUTE,
-					    10, 166 * 10, 1, 2 * 10);
+	if (!state->rgb) {
+		ctrls->exposure = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_EXPOSURE_ABSOLUTE,
+					    10, MAX_DEPTH_EXP * 10, 1, 2 * 10);
+	} else {
+		ctrls->exposure = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_EXPOSURE_ABSOLUTE,
+					    10, MAX_RGB_EXP * 10, 1, 2 * 10);
+	}
 
 	/* Total gain */
 	ctrls->gain = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_ANALOGUE_GAIN,
-- 
2.17.1

